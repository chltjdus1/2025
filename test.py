# ----------------------------
# 1. 필요한 라이브러리 불러오기
# ----------------------------
import streamlit as st   # 웹앱 제작 라이브러리
import random            # 랜덤 선택을 위한 라이브러리

# ----------------------------
# 2. 간단한 한국어 감정 분석 함수
# ----------------------------
def extended_sentiment_analysis(text):
    """
    사용자의 입력 문장에서 감정을 판별하는 간단한 함수
    - 긍정: 행복, 신남, 즐거움 등
    - 부정: 우울, 화남, 피곤 등
    - 중립: 보통, 무난, 평온 등
    """
    text = text.lower()  # 입력 텍스트를 소문자로 변환

    # 키워드 정의
    positive_keywords = ["좋아", "행복", "즐거", "신나", "기쁨", "만족", "설렘", "좋은"]
    negative_keywords = ["슬퍼", "우울", "짜증", "화나", "싫어", "힘들", "피곤", "외로움", "긴장", "불안"]
    neutral_keywords  = ["보통", "무난", "평온", "그냥"]

    # 키워드가 포함되면 해당 감정 반환
    if any(word in text for word in positive_keywords):
        return "긍정"
    elif any(word in text for word in negative_keywords):
        return "부정"
    else:
        return "중립"

# ----------------------------
# 3. 감정별 음식 데이터 (음식 + 레시피 + 칼로리 + 추천 이유)
# ----------------------------
mood_foods = {
    "긍정": [
        {"음식": "파스타", "레시피": "면 삶기 → 소스 만들기 → 섞기 → 치즈 뿌리기", "칼로리": 650,
         "이유": "긍정적인 기분에는 풍미 가득한 파스타가 에너지를 더해줍니다."},
        {"음식": "초밥", "레시피": "밥에 식초 섞기 → 생선 얹기", "칼로리": 300,
         "이유": "상쾌한 기분에는 가볍고 신선한 초밥이 잘 어울립니다."},
        {"음식": "딸기 파르페", "레시피": "컵에 과일과 요거트 겹겹이 쌓기 → 시럽 뿌리기", "칼로리": 400,
         "이유": "즐거운 감정에는 달콤한 디저트가 행복을 배가시켜줍니다."},
        {"음식": "샐러드", "레시피": "채소 손질 → 드레싱과 섞기", "칼로리": 180,
         "이유": "가벼운 마음에는 신선한 샐러드가 잘 맞습니다."},
        {"음식": "치킨", "레시피": "닭 양념 → 튀기기", "칼로리": 900,
         "이유": "들뜬 기분에는 바삭한 치킨이 더 신나게 해줍니다."}
    ],
    "중립": [
        {"음식": "치즈 피자", "레시피": "도우 준비 → 소스+치즈 올리기 → 굽기", "칼로리": 700,
         "이유": "무난한 하루에는 부담 없이 즐길 수 있는 피자가 잘 어울립니다."},
        {"음식": "샌드위치", "레시피": "빵 사이에 재료 넣기", "칼로리": 350,
         "이유": "중립적인 기분에는 간단하고 균형 잡힌 샌드위치가 적당합니다."},
        {"음식": "볶음밥", "레시피": "재료 볶기 → 밥 넣고 함께 볶기", "칼로리": 600,
         "이유": "평온한 기분에는 편안하게 먹을 수 있는 볶음밥이 제격입니다."}
    ],
    "부정": [
        {"음식": "초콜릿 케이크", "레시피": "반죽 만들기 → 굽기 → 시럽 뿌리기", "칼로리": 500,
         "이유": "우울한 기분에는 달콤한 디저트가 위로가 됩니다."},
        {"음식": "라멘", "레시피": "면 삶기 → 육수 만들기 → 토핑 올리기", "칼로리": 550,
         "이유": "피곤할 땐 따뜻한 국물이 힘을 줍니다."},
        {"음식": "삼계탕", "레시피": "닭 손질 → 약재와 함께 끓이기", "칼로리": 800,
         "이유": "기력이 없을 때는 영양 가득한 삼계탕이 회복을 돕습니다."}
    ]
}

# ----------------------------
# 4. Streamlit 앱 화면 구성
# ----------------------------
st.set_page_config(page_title="음식 추천 웹앱", layout="centered")   #전체 페이지 구성

st.title("🍴 기분에 맞는 음식 추천 웹앱")
st.write("👉 기분을 입력하면 감정 분석을 통해 음식, 레시피, 칼로리, 추천 이유를 알려드립니다!")

# 사용자 입력
user_input = st.text_input("지금 기분을 자유롭게 입력해주세요 (예: '오늘 너무 우울해요')")  #user_input 변수

# ----------------------------
# 5. 결과 출력
# ----------------------------
if user_input:
    mood = extended_sentiment_analysis(user_input)   # 감정 분석 실행
    food_info = random.choice(mood_foods[mood])      # 해당 감정에 맞는 음식 중 랜덤 선택

    # 감정 결과
    st.success(f"🧠 감정 분석 결과: **{mood}**")  #출력 함수로 긍정적인 기분일 때

    # 추천 음식
    st.subheader(f"🎯 추천 음식: {food_info['음식']}")  #소제목

    # 레시피
    st.write(f"📖 레시피: {food_info['레시피']}")   #일반텍스트

    # 칼로리
    st.write(f"🔥 예상 칼로리: **{food_info['칼로리']} kcal**")

    # 추천 이유
    st.info(f"💡 추천 이유: {food_info['이유']}")   #변수 선언언
